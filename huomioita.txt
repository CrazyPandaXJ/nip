Sekalaisia huomioita:

* voisi olla järkevää yhdistää myös moralisaatio find_cliquesiin
* pitäisikö tässä heappikin tehdä. lienee järkevintä.
* Variable.c:n new_variable näyttää työläältä
  * id tuntuu konseptina hankalalta, equal-vertailu kosahtaa NULLiin
    ja pointteri tekee saman (ellei sitten haluta muuttujille järjestystä...
    sen saisi Graphista. Tähän oli joku syy...)

* Myös Graph nähtävästi ei-pointteri. Mieti korjaus kun ei väsytä.
* potential copy_potential näyttää NULL-robustilta

* Potentiaalin choose_indices-funktiota kutsutaan jokaiselle potentiaalin
  alkiolle eli monta kertaa. Saattaisi olla tehokkaampaa tehdä ensiksi
  jonkinlainen "maski" ja käyttää sitä _ehkä_ tehokkaampana keinona 
  valita indeksit. -> ehkä kakkosversioon

16.1.2004 (Janne, Mikko)
* Taulukoita ei voi esitellä ilmoittamatta kokoa, eli
  tyyliin "int i[]" (pitää olla "int *i"). Taulukkoa ei myöskään voi
  esitellä tyyliin "int[] i" (tämä on javaa).

* Variable on nyt osoitintyyppi. Tarvittavat muutokset on
  periaatteessa tehty.
--

22.1.2004 (Mikko)
* Ovatko Graphin moralise-funktion parametrit järkevät? Pitääkö sille
  tosiaan antaa kopio alkuperäisestä verkosta. Eikö se voisi itse tehdä
  verkosta kopion ja palauttaa sen? Ehkä oli joku syy, miksi ei tehdä
  näin. Oliko?
--

23.2.2004 (Janne, Mikko)
* Alettiin ihmettelemään Bison-systeemeitä. Teemme seuraavaksi
  parserin, jolla saadaan malleja ja niiden parametreja luettua
  tiedostosta. Tällöin pääsemme ehkä jopa testaamaan tuotoksia...
--

16.3.2004 (Janne)
* Parserin määritteleminen ei ole aivan triviaalia. On hieman muokattava 
  mm. Variable-juttuja s.e. muuttujille voi asettaa tilojen nimet ja muut 
  parametrit helposti. Parseriin tulee tietorakenteet, joihin tiedoston 
  mukaisia muuttujia/nodeja tulee... Verkon, riippuvuuksien ja taulukoiden 
  parsettaminen vaikuttaa erityisen ikävältä. Tutkitaan...
--

24.5.2004 (Janne)
* Clique.c:ssä on nyt funktio create_Potential(...), jonka avulla voi 
  luoda ohjelmalle kelpaavan potentiaalin minkä tahansa muuttujajärjestyksen 
  mukaan järjestetystä taulukosta. Tämä on tarpeen, koska Huginin 
  tiedostoformaatissa esim. potentiaalin P(C | BD) "vähiten merkitsevä" 
  muuttuja on C, mutta ohjelmassamme oletetaan, että järjestys on esim. BCD.
--

26.5.2004
* Tarttis keksiä mihin muuttujia (Variable), klikkejä (Clique) ja sepsettejä 
  (Sepset) tallennetaan! Eli miten koodiamme hyväksi käyttävä ohjelma pääsee 
  käsiksi mihinkään ja miten parseri antaa tuotoksensa ulkomaailman nähtäväksi?
--

27.5.2004 (Mikko)
* Mikä ajatus on Variable.c:n funktiossa
  int variable_statenames(Variable v, char **states) ?
  Tuo ei näytä kovin paljon tekevän...
--

2.6.2004 (Janne)
* variable_statenames() mahdollistaa takin kääntämisen, jos joskus vaikka 
  vaihdettaisiin muistinvaraus strategiaa. Nyt taulukoita ei kopioida, 
  mutta vaarana on käytössä olevan muistin vapauttaminen tai uudelleen 
  käyttäminen merkkijonojen osalta.

* Mitäs mitäs... Meillä ei muuten taida olla semmoista kuin 
  "GLOBAL RETRACTION", vaikka jonkunlaiset valmiudet onkin. Tämä vain 
  tarkoittaa sitä, että mikään ei saisi olla mahdotonta 
  l. todennäköisyydeltään nollaa kun dataa syötetään sisään.
--

8.6.2004 (Janne)
* No voi hevon kettu. Ei sitten voinut Huginin net-tiedoston esittelyssä 
  kertoa kaikkia likaisia yksityiskohtia... Menee parseri pikkuisen 
  remonttiin, mutta onneksi tehtiin Bisonilla.